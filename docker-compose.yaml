version: '3.8'

services:
  postgres:
    image: postgres:15.3-alpine3.18
    container_name: rinha-postgres
    command: '-c shared_buffers=128MB -c max_connections=150'
    environment:
      - 'POSTGRES_DB=rinha_dev'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'LANG=en_US.utf8'
    volumes:
      - '.data/postgres/pgdata/:/var/lib/postgresql/data'
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.40'
          memory: 864M
        reservations:
          cpus: '0.10'
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s

  migration:
    # just a task, it won't run during the test
    image: 'ghcr.io/rwillians/rinha-backend--elixir-cowboy-ecto:${IMAGE_TAG:-latest}'
    container_name: rinha-migration
    depends_on:
      - postgres
    environment:
      - 'DATABASE_URL=postgres://postgres:postgres@postgres/rinha_dev'
      - 'POOL_SIZE=1'
    entrypoint: [ "sh", "-c" ]
    command: [ 'busybox sleep 15s && mix ecto.setup' ]

  api:
    image: 'ghcr.io/rwillians/rinha-backend--elixir-cowboy-ecto:${IMAGE_TAG:-latest}'
    depends_on:
      - postgres
    environment:
      - 'DATABASE_URL=postgres://postgres:postgres@postgres/rinha_dev'
      - 'RELEASE_COOKIE=4F022BFB13DB6D12BDB7818F80AC2B6F'
      - 'RELEASE_DISTRIBUTION=sname'
      - 'SERVER_ENABLED=true'
      - 'POOL_SIZE=75'
    entrypoint: [ "sh", "-c" ]
    #                   ↓ Demora alguns segundos para o banco de dados ficar
    #                   ↓ disponível então precisamos esperar um pouco.
    command: [ 'busybox sleep 10s && echo "starting http server..." && _build/prod/rel/rinha/bin/rinha start' ]
    # ports:
    #   - '${PORT:-8080}:3000'
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.45'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 32M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s

  nginx:
    image: nginx:1.25.1-alpine3.17-slim
    container_name: rwillians-ngnix
    volumes:
      - '.data/nginx/conf.d/:/etc/nginx/conf.d/:ro'
    depends_on:
      - api
    ports:
      - '${PORT:-8080}:8080'
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.20'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 16M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
